{"version":3,"sources":["components/Searchbox.js","components/Cards.js","reportWebVitals.js","index.js"],"names":["Searchbox","searchChange","className","type","placeholder","onKeyPress","Card","randomPokeID","Math","floor","random","searchValueCheck","state","searchfield","toLowerCase","searchPokemon","Promise","all","fetch","then","response","json","data","species","url","pokeName","pokeForm","setState","name","pokeImage","sprites","front_default","flavor_text_entries","flavor_text","catch","error","console","log","onSearchChange","searchValue","target","value","handleKeyPress","key","handleOnClick","pokeID","this","src","width","height","alt","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gNAceA,EAZG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,8BACI,uBACIC,UAAU,6CACVC,KAAK,SACLC,YAAY,mBACZC,WAAYJ,OCmFbK,G,wDAvFb,aAAe,IAAD,8BACZ,gBAcFC,aAAe,WACb,OAAOC,KAAKC,MAAoB,IAAdD,KAAKE,UAAc,GAhBzB,EAmBdC,iBAAmB,WACjB,MAAuC,kBAA5B,EAAKC,MAAMC,YACb,EAAKD,MAAMC,YAC0B,kBAA5B,EAAKD,MAAMC,YACpB,EAAKD,MAAMC,YAAYC,mBADzB,GAtBK,EA4BdC,cAAgB,WACdC,QAAQC,IAAI,CACVC,MAAM,qCAAD,OAAsC,EAAKP,qBAChDO,MAAM,qCAAD,OAAsC,EAAKP,qBAAsBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAI,OAAIJ,MAAMI,EAAKC,QAAQC,UACvIL,MAAK,YAA2B,IAAD,mBAAxBM,EAAwB,KAAdC,EAAc,KAC9B,OAAOV,QAAQC,IAAI,CAACQ,EAASJ,OAAQK,EAASL,YAE/CF,MAAK,YAA2B,IAAD,mBAAxBM,EAAwB,KAAdC,EAAc,KAC9B,EAAKC,SAAS,CACZF,SAAUA,EAASG,KACnBC,UAAWJ,EAASK,QAAQC,cAC5BL,SAAUA,EAASM,oBAAoB,GAAGC,iBAG7CC,OAAM,SAACC,GACFA,GACFC,QAAQC,IAAIF,OA5CN,EAiDdG,eAAiB,SAACC,GAChB,EAAKZ,SAAS,CAAEd,YAAa0B,EAAYC,OAAOC,QAAS,WACvD,EAAK1B,oBAnDK,EAuDd2B,eAAiB,SAACH,GACQ,UAApBA,EAAYI,KACZ,EAAKhB,SAAS,CAAEd,YAAa0B,EAAYC,OAAOC,QAAS,WACvD,EAAK1B,oBA1DC,EA+Dd6B,cAAgB,WACd,IAAMC,EAAS,EAAKtC,eACpB,EAAKoB,SAAS,CAAEd,YAAagC,IAAU,WACrC,EAAK9B,oBAhEP,EAAKH,MAAQ,CACXC,YAAa,GACbY,SAAU,GACVI,UAAW,GACXH,SAAU,GACVmB,OAAQ,IAPE,E,qDAWd,WACEC,KAAKF,kB,oBA0DP,WACE,OACE,qBAAK1C,UAAU,uCAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,oBAAIA,UAAU,WAAd,SAA0B4C,KAAKlC,MAAMa,WACrC,qBAAKsB,IAAKD,KAAKlC,MAAMiB,UAAWmB,MAAM,MAAMC,OAAO,MAAMC,IAAI,WAAWhD,UAAU,WAClF,qBAAKA,UAAU,SAAf,SAAyB4C,KAAKlC,MAAMc,WACpC,sBAAKxB,UAAU,UAAf,UACE,cAAC,EAAD,CAAWD,aAAc6C,KAAKJ,iBAC9B,wBAAQS,QAASL,KAAKF,cAAe1C,UAAU,iBAA/C,wC,GAhFOkD,cCQJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,SAMlDX,M","file":"static/js/main.d8c26a1b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Searchbox = ({ searchChange }) => {\r\n    return(\r\n        <div>\r\n            <input\r\n                className='pa2 br4 ba b--green bg-lightest-blue f6 tc'\r\n                type='search'\r\n                placeholder='Search Pokemons!'\r\n                onKeyPress={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React, { Component } from 'react';\r\nimport Searchbox from './Searchbox';\r\nimport 'tachyons';\r\n\r\nclass Card extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      searchfield: '',\r\n      pokeName: '',\r\n      pokeImage: '',\r\n      pokeForm: '',\r\n      pokeID: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleOnClick();\r\n  }\r\n\r\n  randomPokeID = () => {\r\n    return Math.floor(Math.random()*898)+1 //current highest pokeID is 898.\r\n  }\r\n\r\n  searchValueCheck = () => {\r\n    if (typeof(this.state.searchfield) === 'number') {\r\n      return this.state.searchfield;\r\n    } else if (typeof(this.state.searchfield) === 'string') {\r\n      return this.state.searchfield.toLowerCase()\r\n    }\r\n  }\r\n  \r\n  \r\n  searchPokemon = () => {\r\n    Promise.all([\r\n      fetch(`https://pokeapi.co/api/v2/pokemon/${this.searchValueCheck()}`),\r\n      fetch(`https://pokeapi.co/api/v2/pokemon/${this.searchValueCheck()}`).then(response => response.json()).then(data => fetch(data.species.url))]) /*fetches pokemon-species url*/\r\n      .then(([pokeName, pokeForm]) => {\r\n        return Promise.all([pokeName.json(), pokeForm.json()])\r\n      })\r\n      .then(([pokeName, pokeForm]) => {\r\n        this.setState({\r\n          pokeName: pokeName.name,\r\n          pokeImage: pokeName.sprites.front_default,\r\n          pokeForm: pokeForm.flavor_text_entries[1].flavor_text,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        if (error) {\r\n          console.log(error)\r\n        } \r\n      });\r\n  }\r\n\r\n  onSearchChange = (searchValue) => {\r\n    this.setState({ searchfield: searchValue.target.value }, () => {\r\n      this.searchPokemon();\r\n    });\r\n  }\r\n\r\n  handleKeyPress = (searchValue) => {\r\n    if (searchValue.key === 'Enter'){\r\n        this.setState({ searchfield: searchValue.target.value }, () => {\r\n          this.searchPokemon();\r\n        });\r\n    }\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    const pokeID = this.randomPokeID();\r\n    this.setState({ searchfield: pokeID }, () => {\r\n      this.searchPokemon();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex justify-center w-100 h-100 test\">\r\n        <div className=\"tc justify-center\">\r\n          <h1 className=\"pokeName\">{this.state.pokeName}</h1>\r\n          <img src={this.state.pokeImage} width=\"200\" height=\"200\" alt=\"pokemong\" className=\"center\"/> \r\n          <div className=\"pa4 f6\">{this.state.pokeForm}</div>\r\n          <div className=\"pa3 ma2\">\r\n            <Searchbox searchChange={this.handleKeyPress} />\r\n            <button onClick={this.handleOnClick} className=\"ma3 pa2 br3 f6\">Random Pokemon</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Card from './components/Cards.js'\nimport reportWebVitals from './reportWebVitals';\nimport \"@fontsource/press-start-2p/400.css\";\n\nReactDOM.render(<Card />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}